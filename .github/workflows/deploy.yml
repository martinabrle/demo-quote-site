name: Deploy Static Web App with Entra ID (Azure AD) App Registration

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_STATIC_WEBAPP_NAME: ${{vars.AZURE_STATIC_WEBAPP_NAME }}
      AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_CLIENT_ID: "${{secrets.AZURE_CLIENT_ID}}"
      AZURE_TENANT_ID: "${{secrets.AZURE_TENANT_ID}}"
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ENTRA_APP_NAME: ${{ vars.ENTRA_APP_NAME }}
    permissions:
        id-token: write
        contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get the latest version of AZ CLI and Azure Bicep
        run: |
            az upgrade -y
            az bicep upgrade

      - name: Azure login # https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure
        uses: azure/login@v2
        with:
          client-id: "${{env.AZURE_CLIENT_ID}}"
          tenant-id: "${{env.AZURE_TENANT_ID}}"
          subscription-id: "${{env.AZURE_SUBSCRIPTION_ID}}"

      - name: Deploy Static Web App RG
        run: |
          az group create --name "${{env.AZURE_RESOURCE_GROUP}}" --location "${{env.AZURE_LOCATION}}"
      
      - name: Deploy Static Web App infra (Bicep)
        run: |
          deploymentOutput=`az deployment group create --resource-group ${{env.AZURE_RESOURCE_GROUP}} --template-file ./infra/infra.bicep --parameters staticWebAppName="${{env.AZURE_STATIC_WEBAPP_NAME}}" location="${{env.AZURE_LOCATION}}"`
          echo "deploymentOutput:"
          echo $deploymentOutput
          echo " "

      - name: Register Azure AD App (Entra ID)
        id: registerapp
        run: |
          APP_ID=$(az ad app create --display-name "${{env.ENTRA_APP_NAME}}" --query appId -o tsv)
          az ad app update --id ${APP_ID} --web-redirect-uris "https://${{env.AZURE_STATIC_WEBAPP_NAME}}.azurestaticapps.net/.auth/login/aad/callback"
          echo "app_id=${APP_ID}" >> $GITHUB_OUTPUT

      - name: Update MSAL clientId in script.js
        run: |
          sed -i "s/clientId: \"<YOUR_CLIENT_ID>\"/clientId: \"${{steps.registerapp.outputs.app_id}}\"/g" ./www/script.js

      - name: Retrieve Static Web Apps Token
        id: swa_token
        run: |
          SWA_CLI_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list --name "${{env.AZURE_STATIC_WEBAPP_NAME}}" --query "properties.apiKey" -o tsv)
          echo "SWA_CLI_DEPLOYMENT_TOKEN=$SWA_CLI_DEPLOYMENT_TOKEN" >> $GITHUB_ENV

      - name: Install Azure Static Web Apps CLI
        run: |
          npm install -g @azure/static-web-apps-cli

      - name: Deploy the app to Static Web App
        id: swa_deploy
        run: |
          swa deploy -./www --app-name "${{env.AZURE_STATIC_WEBAPP_NAME}}" --env production --deployment-token "${{steps.swa_token.outputs.SWA_CLI_DEPLOYMENT_TOKEN}}" --resource-group "${{env.AZURE_RESOURCE_GROUP}}"
        
      # - name: Deploy static files to Static Web App
      #   uses: Azure/static-web-apps-deploy@v1
      #   env:
      #     AZURE_STATIC_WEB_APPS_API_TOKEN: ${{steps.swa_token.outputs.SWA_CLI_DEPLOYMENT_TOKEN}}
      #     SWA_CLI_DEPLOYMENT_TOKEN: ${{steps.swa_token.outputs.SWA_CLI_DEPLOYMENT_TOKEN}}
      #   with:
      #     azure_static_web_apps_api_token: ${{steps.swa_token.outputs.SWA_CLI_DEPLOYMENT_TOKEN}}
      #     repo_token: ${{secrets.GITHUB_TOKEN}}
      #     action: "upload"
      #     app_location: "./www"
